first column  (Opponent)
# Rock  = "A" (2)
# Paper = "B" (1)
# Scssr = "C" (3)
second column (me)
# Rock  = "X" (2)
# Paper = "Y" (1)
# Scssr = "Z" (3)
You then add +6 if there is a L for the first column (Opponent)

wait, it's more complex than that
ex:
    A Y
    B X
    C Z

Honestly, bash this lol.
sed, and vim macros

Make 3 versions of the output
1.Paper + Rock = positive # Paper win
2.Rock + scsrs = positive # Rock win
3.scsr + Paper = positive # scissors win

Combinations:
A X: 55  (tie)
A Y: 401 (Rock L)
A Z: 223 (Rock W)

B X: 252 (Paper L)
B Y: 275 (tie)
B Z: 134 (Paper W)

C X: 188 (scissors L)
C Y: 373 (scissors W)
C Z: 599 (tie)

How did I find the combinations?
    rg -i (A ,B ,C )(X,Y,Z) input.txt | wc --lines # Make this real, especially the part where it multiplies the combinations
# Please don't laugh :sob:

Round 1:
A Y: 401 (Rock Ls)
    Opponent is A, I an Y (2+6=8)(8*401)

Round 2:
B X: 252 (Paper Ls)
    Opponent is B, I am X (1+0=1)(1*252=252)

Round 3:
C Z: 599 (tie)
    Opponent is C, I am Z (3+3=6)

